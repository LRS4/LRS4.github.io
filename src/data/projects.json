[
    {
        "title": "theDataLog Django Website",
        "paragraph": "A course and blog website built using Django, Python and PostgreSQL. Deployed using a Linode Ubuntu Linux container. Features include:",
        "listItems": [
            "Security and user login",
            "HTTPS Let's Encrypt",
            "Object-relational mapping",
            "Integration to Google Sheets API",
            "Statistics on user progress with ChartJS",
            "Clean design principles"
        ],
        "imageUrl": "assets/django-logo.png",
        "imageAlt": "theDataLog Django Website",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "https://thedatalog.co.uk/",
                "title": "View app",
                "icon": "fa fa-fw fa-external-link-alt"
            }
        ]
    },
    {
        "title": "CS50 Final Project - ML Flask App",
        "paragraph": "The project was to create a machine learning web application which predicts the probability of surviving the famous titanic ship-wreck based upon user input variables and the training dataset from Kaggle. This combined both CS and machine learning skills to deploy a Flask app to Heroku. In addition, I built an <a class=\"text-link\" href=\"https://github.com/LRS4/python-automation/tree/master/auto_web_tester\" target=\"_blank\">automated web driver</a> script to speed up testing.",
        "listItems": [],
        "imageUrl": "assets/titanic.png",
        "imageAlt": "theDataLog Django Website",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "http://ml-titanic-app.herokuapp.com/",
                "title": "View app",
                "icon": "fa fa-fw fa-external-link-alt"
            },
            {
                "class": "info-btn",
                "url": "https://github.com/LRS4/cs50-final-project/",
                "title": "View code",
                "icon": "fa fa-fw fa-code"
            }
        ]
    },
    {
        "title": "Help Me Apply - NLP",
        "paragraph": "A project I built with NLTK and Python Flask to scrape job applications and analyse their keywords usage. Deployed using Heroku and GitHub.",
        "listItems": [],
        "imageUrl": "assets/text-mining.png",
        "imageAlt": "Help Me Apply",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "http://helpmeapply.herokuapp.com/",
                "title": "View app",
                "icon": "fa fa-fw fa-external-link-alt"
            },
            {
                "class": "info-btn",
                "url": "https://github.com/LRS4/help-me-apply",
                "title": "View code",
                "icon": "fa fa-fw fa-code"
            }
        ]
    },
    {
        "title": "UK Almanac Dashboard",
        "paragraph": "A project I built with Python Flask, Bootstrap and jQuery to present statistics on the UK in a Tropico almanac fashion. Deployed using Heroku and GitHub. Features include:",
        "listItems": [
            "Web scraping - Daily briefing from The Week",
            "API data calls",
            "Mapping with Leaflet",
            "Graphing with ChartJS"
        ],
        "imageUrl": "assets/map.png",
        "imageAlt": "Almanac Dashboard",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "http://uk-almanac.herokuapp.com/",
                "title": "View app",
                "icon": "fa fa-fw fa-external-link-alt"
            },
            {
                "class": "info-btn",
                "url": "https://github.com/LRS4/almanac-app",
                "title": "View code",
                "icon": "fa fa-fw fa-code"
            }
        ]
    },
    {
        "title": "Pyflix Movie App",
        "paragraph": "A cross platform electron-vue desktop application to display movie information using OMDB of the files stored in a directory. The built application can be used by downloading and running the folders and Setup exe below via OneDrive. Please note you accept any risk in downloading and using this software.",
        "listItems": [
            "Node.js",
            "Vue",
            "Electron",
            "Vuex and Vue Router",
            "Cross-platform deployment",
            "Windows, macOS and Linux"
        ],
        "imageUrl": "assets/vuejs.PNG",
        "imageAlt": "Pyflix Vue Electron App",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "https://1drv.ms/u/s!Alz0OClqcjhqoiCrgfo26NBsU8IH?e=p1ODo6/",
                "title": "Download electron app",
                "icon": "fa fa-fw fa-download"
            },
            {
                "class": "info-btn",
                "url": "https://res.cloudinary.com/dayqxxsip/image/upload/v1587819197/App%20Screenshots/pyflix-app_hhvzxi.png",
                "title": "View app screenshot",
                "icon": "fa fa-fw fa-camera"
            },
            {
                "class": "info-btn",
                "url": "https://github.com/LRS4/electron-vue-pyflix",
                "title": "View code",
                "icon": "fa fa-fw fa-code"
            }
        ]
    },
    {
        "title": "House Prices Machine Learning",
        "paragraph": "A project completed on Kaggle whilst completing the Microsoft Professional Certificate in Data Science. I built a ML regression model to predict house prices in Aymes, Iowa. I demonstrated CRISP-DM (cross-industry standard practice in data mining) to explore, model and evaluate the solution which scored highly upon submission.",
        "listItems": [],
        "imageUrl": "assets/house.png",
        "imageAlt": "House Prices Machine Learning",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "https://github.com/LRS4/Python-Projects/blob/master/Housing%20Prices%20Prediction%20Project/Predicting%20House%20Prices.ipynb",
                "title": "View Jupyter notebook",
                "icon": "fa fa-fw fa-book"
            }
        ]
    },
    {
        "title": "Numerical Assessment App",
        "paragraph": "The project was to create a numerical assessment test from printed PDF materials I purchased from Assessment Day a few years ago. This project is for personal use for the purposes of learning.",
        "listItems": [],
        "imageUrl": "assets/pi-small.png",
        "imageAlt": "Numerical Assessment App",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "https://www.youtube.com/watch?v=0E8LegbfDGQ",
                "title": "View video demo",
                "icon": "fa fa-fw fa-video"
            },
            {
                "class": "info-btn",
                "url": "https://github.com/LRS4/aptitude-test-project",
                "title": "View code",
                "icon": "fa fa-fw fa-code"
            }
        ]
    },
    {
        "title": "News Rewind Web App",
        "paragraph": "A project I built using HTML, CSS and jQuery to decorate a Google News URL to gather five years worth of a news story to see how it has developed over time. This is very useful in a time of information overload, we are quick to forget key events that happened years ago so this allows a user to review previous articles.",
        "listItems": [],
        "imageUrl": "assets/rewind-app.jpg",
        "imageAlt": "News Rewind Web App",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "projects/rewind-app.html",
                "title": "View app",
                "icon": "fa fa-fw fa-external-link-alt"
            }
        ]
    },
    {
        "title": "Savings Calculator Web App",
        "paragraph": "A project I built using HTML, CSS and JavaScript to forecast how many years it will take to reach x25 your annual expenses, and to show you your savings rate.<br /><br />I used auto-calculating fields on key-up, HTML DOM, variables, functions, while loops and arithmetic operators and increased my understanding in applying algorithms and <a class=\"text-link\" href=\"https://www.symbolab.com/solver/step-by-step/solve%20for%20y%2C%20%2011000%20%5Ccdot%5Cfrac%7B%5Cleft(%5Cleft(1.07%5E%7By%7D%5Cright)-1%20%5Cright)%7D%7B1.07%20-%201%7D%20%3D%20150000\" target=\"_blank\">equations</a> to problems. <br /><br />",
        "listItems": [],
        "imageUrl": "assets/calculator.jpg",
        "imageAlt": "Savings Calculator Web App",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "projects/fi-calculator.html",
                "title": "View app",
                "icon": "fa fa-fw fa-external-link-alt"
            }
        ]
    },
    {
        "title": "Wikipedia API App",
        "paragraph": "Inspired by the challenge at FreeCodeCamp, the app uses the Wikipedia API open search endpoint to pull back requests. The user stories were; I can search Wikipedia entries in a search box, and I can click a button to see a random Wikipedia entry. <br /><br /> I used HTML, CSS, JavaScript, AJAX and JSON and developed knowledge on manipulating URLs and arrays alongside DOM manipulation.",
        "listItems": [],
        "imageUrl": "assets/wikipedia.png",
        "imageAlt": "Wikipedia Search App",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "projects/wikipedia-api-viewer.html",
                "title": "View app",
                "icon": "fa fa-fw fa-external-link-alt"
            }
        ]
    },
    {
        "title": "Shiny Dashboard - Customer Satisfaction",
        "paragraph": "The project was to create an interactive dashboard which displayed a dataset based upon telephony information (Software company's service center). This would allow insight into demand, customer insight, satisfaction and performance management information.",
        "listItems": [],
        "imageUrl": "assets/analytics.png",
        "imageAlt": "Shiny Dashboard App",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "https://www.youtube.com/watch?v=Mel7KZnWLhU",
                "title": "View video demo",
                "icon": "fa fa-fw fa-video"
            },
            {
                "class": "info-btn",
                "url": "https://github.com/LRS4/csat-performance-dashboard",
                "title": "View code",
                "icon": "fa fa-fw fa-code"
            }
        ]
    },
    {
        "title": "Random Quotes Machine",
        "paragraph": "A quick project to implement a random programming quotes generator using AJAX to call an open API; credit to <a class=\"text-link\" href=\"https://github.com/skolakoda/programming-quotes-api\" target=\"_blank\">skolakoda</a>. <br /><br />There are functions for viewing a quote author's Wikipedia page, alongside a decorated URL function to tweet the quote.",
        "listItems": [],
        "imageUrl": "assets/quotes.jpg",
        "imageAlt": "Random Quotes Machine",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "projects/quotes-machine.html",
                "title": "View app",
                "icon": "fa fa-fw fa-external-link-alt"
            },
            {
                "class": "info-btn",
                "url": "https://github.com/LRS4/LRS4.github.io/blob/master/projects/quotes-machine.html",
                "title": "View code",
                "icon": "fa fa-fw fa-code"
            }
        ]
    },
    {
        "title": "Hello, World! Travel Website",
        "paragraph": "A website to present my hobby of traveling, built for CS50 Pset 5. I used mostly HTML, CSS and Bootstrap4 to build this simple mobile-optimised site with a function for the I'm Feeling Lucky random page button using JS and jQuery. I used the W3C Markup Validation Service to error check the code as per the project <a class=\"text-link\" href=\"https://docs.cs50.net/2018/fall/psets/5/homepage/homepage.html\" target=\"_blank\">specification.</a>.",
        "listItems": [],
        "imageUrl": "assets/html-css-website.jpg",
        "imageAlt": "Hello, World! Travel Website",
        "category": "projects",
        "buttons": [
            {
                "class": "info-btn",
                "url": "https://lrs4.cs50.site/",
                "title": "View site",
                "icon": "fa fa-fw fa-external-link-alt"
            }
        ]
    }
]